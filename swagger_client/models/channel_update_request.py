# coding: utf-8

"""
    SUPLA Cloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.3.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ChannelUpdateRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'function_id': 'int',
        'param1': 'int',
        'param2': 'int',
        'param3': 'int',
        'text_param1': 'str',
        'text_param2': 'str',
        'text_param3': 'str',
        'caption': 'str',
        'alt_icon': 'int',
        'hidden': 'bool',
        'location_id': 'int',
        'inherited_location': 'bool',
        'user_icon_id': 'int'
    }

    attribute_map = {
        'function_id': 'functionId',
        'param1': 'param1',
        'param2': 'param2',
        'param3': 'param3',
        'text_param1': 'textParam1',
        'text_param2': 'textParam2',
        'text_param3': 'textParam3',
        'caption': 'caption',
        'alt_icon': 'altIcon',
        'hidden': 'hidden',
        'location_id': 'locationId',
        'inherited_location': 'inheritedLocation',
        'user_icon_id': 'userIconId'
    }

    def __init__(self, function_id=None, param1=None, param2=None, param3=None, text_param1=None, text_param2=None, text_param3=None, caption=None, alt_icon=None, hidden=None, location_id=None, inherited_location=None, user_icon_id=None):  # noqa: E501
        """ChannelUpdateRequest - a model defined in Swagger"""  # noqa: E501
        self._function_id = None
        self._param1 = None
        self._param2 = None
        self._param3 = None
        self._text_param1 = None
        self._text_param2 = None
        self._text_param3 = None
        self._caption = None
        self._alt_icon = None
        self._hidden = None
        self._location_id = None
        self._inherited_location = None
        self._user_icon_id = None
        self.discriminator = None
        if function_id is not None:
            self.function_id = function_id
        if param1 is not None:
            self.param1 = param1
        if param2 is not None:
            self.param2 = param2
        if param3 is not None:
            self.param3 = param3
        if text_param1 is not None:
            self.text_param1 = text_param1
        if text_param2 is not None:
            self.text_param2 = text_param2
        if text_param3 is not None:
            self.text_param3 = text_param3
        if caption is not None:
            self.caption = caption
        if alt_icon is not None:
            self.alt_icon = alt_icon
        if hidden is not None:
            self.hidden = hidden
        if location_id is not None:
            self.location_id = location_id
        if inherited_location is not None:
            self.inherited_location = inherited_location
        if user_icon_id is not None:
            self.user_icon_id = user_icon_id

    @property
    def function_id(self):
        """Gets the function_id of this ChannelUpdateRequest.  # noqa: E501


        :return: The function_id of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._function_id

    @function_id.setter
    def function_id(self, function_id):
        """Sets the function_id of this ChannelUpdateRequest.


        :param function_id: The function_id of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._function_id = function_id

    @property
    def param1(self):
        """Gets the param1 of this ChannelUpdateRequest.  # noqa: E501


        :return: The param1 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._param1

    @param1.setter
    def param1(self, param1):
        """Sets the param1 of this ChannelUpdateRequest.


        :param param1: The param1 of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._param1 = param1

    @property
    def param2(self):
        """Gets the param2 of this ChannelUpdateRequest.  # noqa: E501


        :return: The param2 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._param2

    @param2.setter
    def param2(self, param2):
        """Sets the param2 of this ChannelUpdateRequest.


        :param param2: The param2 of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._param2 = param2

    @property
    def param3(self):
        """Gets the param3 of this ChannelUpdateRequest.  # noqa: E501


        :return: The param3 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._param3

    @param3.setter
    def param3(self, param3):
        """Sets the param3 of this ChannelUpdateRequest.


        :param param3: The param3 of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._param3 = param3

    @property
    def text_param1(self):
        """Gets the text_param1 of this ChannelUpdateRequest.  # noqa: E501


        :return: The text_param1 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: str
        """
        return self._text_param1

    @text_param1.setter
    def text_param1(self, text_param1):
        """Sets the text_param1 of this ChannelUpdateRequest.


        :param text_param1: The text_param1 of this ChannelUpdateRequest.  # noqa: E501
        :type: str
        """

        self._text_param1 = text_param1

    @property
    def text_param2(self):
        """Gets the text_param2 of this ChannelUpdateRequest.  # noqa: E501


        :return: The text_param2 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: str
        """
        return self._text_param2

    @text_param2.setter
    def text_param2(self, text_param2):
        """Sets the text_param2 of this ChannelUpdateRequest.


        :param text_param2: The text_param2 of this ChannelUpdateRequest.  # noqa: E501
        :type: str
        """

        self._text_param2 = text_param2

    @property
    def text_param3(self):
        """Gets the text_param3 of this ChannelUpdateRequest.  # noqa: E501


        :return: The text_param3 of this ChannelUpdateRequest.  # noqa: E501
        :rtype: str
        """
        return self._text_param3

    @text_param3.setter
    def text_param3(self, text_param3):
        """Sets the text_param3 of this ChannelUpdateRequest.


        :param text_param3: The text_param3 of this ChannelUpdateRequest.  # noqa: E501
        :type: str
        """

        self._text_param3 = text_param3

    @property
    def caption(self):
        """Gets the caption of this ChannelUpdateRequest.  # noqa: E501


        :return: The caption of this ChannelUpdateRequest.  # noqa: E501
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this ChannelUpdateRequest.


        :param caption: The caption of this ChannelUpdateRequest.  # noqa: E501
        :type: str
        """

        self._caption = caption

    @property
    def alt_icon(self):
        """Gets the alt_icon of this ChannelUpdateRequest.  # noqa: E501


        :return: The alt_icon of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._alt_icon

    @alt_icon.setter
    def alt_icon(self, alt_icon):
        """Sets the alt_icon of this ChannelUpdateRequest.


        :param alt_icon: The alt_icon of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._alt_icon = alt_icon

    @property
    def hidden(self):
        """Gets the hidden of this ChannelUpdateRequest.  # noqa: E501


        :return: The hidden of this ChannelUpdateRequest.  # noqa: E501
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this ChannelUpdateRequest.


        :param hidden: The hidden of this ChannelUpdateRequest.  # noqa: E501
        :type: bool
        """

        self._hidden = hidden

    @property
    def location_id(self):
        """Gets the location_id of this ChannelUpdateRequest.  # noqa: E501


        :return: The location_id of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this ChannelUpdateRequest.


        :param location_id: The location_id of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._location_id = location_id

    @property
    def inherited_location(self):
        """Gets the inherited_location of this ChannelUpdateRequest.  # noqa: E501


        :return: The inherited_location of this ChannelUpdateRequest.  # noqa: E501
        :rtype: bool
        """
        return self._inherited_location

    @inherited_location.setter
    def inherited_location(self, inherited_location):
        """Sets the inherited_location of this ChannelUpdateRequest.


        :param inherited_location: The inherited_location of this ChannelUpdateRequest.  # noqa: E501
        :type: bool
        """

        self._inherited_location = inherited_location

    @property
    def user_icon_id(self):
        """Gets the user_icon_id of this ChannelUpdateRequest.  # noqa: E501


        :return: The user_icon_id of this ChannelUpdateRequest.  # noqa: E501
        :rtype: int
        """
        return self._user_icon_id

    @user_icon_id.setter
    def user_icon_id(self, user_icon_id):
        """Sets the user_icon_id of this ChannelUpdateRequest.


        :param user_icon_id: The user_icon_id of this ChannelUpdateRequest.  # noqa: E501
        :type: int
        """

        self._user_icon_id = user_icon_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ChannelUpdateRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ChannelUpdateRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
